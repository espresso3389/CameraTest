name: CI

on:
  push:
    branches: [ master, dev ]
    paths-ignore:
    - 'README.md'
    - analysis_options.yaml
    - 'docs/**'
    - 'extras/**'
    - '.vscode/**'
    - '.gitignore'
    - '.gitattributes'
    - '.editorconfig'

  pull_request:
    branches: [ master, dev ]
    paths-ignore:
    - 'README.md'
    - analysis_options.yaml
    - 'docs/**'
    - 'extras/**'
    - '.vscode/**'
    - '.gitignore'
    - '.gitattributes'
    - '.editorconfig'

jobs:
  # #
  # # Build for Android
  # #
  # build_android:
  #   runs-on: ubuntu-latest
  #   #runs-on: [self-hosted, linux, x64]
  #   timeout-minutes: 20

  #   steps:
  #   - uses: actions/checkout@v2

  #   - name: Install Flutter toolchains
  #     run: ./scripts/install_flutter.sh
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional

  #   - name: Create buildConfig.dart
  #     run: ./scripts/version.sh
    
  #   - name: Customization for branch
  #     run: ./scripts/customize.sh
  #     env:
  #       ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
  #       IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
  #       IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
  #       IOS_PROV_PROFILE_SPECIFIER: ${{ secrets.IOS_PROV_PROFILE_SPECIFIER }}

  #   - name: Generate publish.properties (master)
  #     env:
  #       ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
  #       ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
  #       ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
  #       ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
  #       ANDROID_SERVICEACCOUNT_JSON_BASE64: ${{ secrets.ANDROID_SERVICEACCOUNT_JSON_BASE64 }}
  #       ANDROID_UPLOAD_TRACK: ${{ secrets.ANDROID_UPLOAD_TRACK }}
  #     run: ./scripts/generate_pubprops.sh

  #   - name: Building Android appbundle
  #     run: flutter build appbundle --build-name $app_ver --build-number $app_rev --verbose

  #   - name: Upload to Google Play
  #     run: ./gradlew publishBundle
  #     working-directory: ./android
    
  #   - name: Slack notification
  #     uses: 8398a7/action-slack@v3
  #     with:
  #       status: ${{ job.status }}
  #       author_name: GitHub/CameraTest Android
  #       fields: repo,commit,message,author # default: repo,commit
  #       text: CameraTest Android ${{ env.app_build_name }} build ${{ job.status }}.
  #       if_mention: always # success,failure,cancelled
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
  #       SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
  #     if: always() # Pick up events even if the job fails or is canceled.

  #
  # Build for iOS
  #
  build_ios:
    runs-on: macos-latest
    timeout-minutes: 30

    steps:
    - uses: actions/checkout@v2

    - name: Install Flutter toolchains
      run: ./scripts/install_flutter.sh
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
    
    - name: Create buildConfig.dart
      run: ./scripts/version.sh

    - name: Customization for branch
      run: ./scripts/customize.sh
      env:
        ANDROID_APP_ID: ${{ secrets.ANDROID_APP_ID }}
        IOS_BUNDLE_ID: ${{ secrets.IOS_BUNDLE_ID }}
        IOS_TEAM_ID: ${{ secrets.IOS_TEAM_ID }}
        IOS_PROV_PROFILE_SPECIFIER: ${{ secrets.IOS_PROV_PROFILE_SPECIFIER }}

    # Workaround for self-hosting case on which pod is missing on the PATH
    - run: which pod || echo "::set-env name=PATH::$PATH:/usr/local/bin"

    - name: Initialize temporary keychain and install certificate
      env:
        P12_BASE64: ${{ secrets.IOS_APPLE_DIST_P12_BASE64 }}
        P12_PASSWORD: ${{ secrets.IOS_APPLE_DIST_P12_PASSWORD }}
      run: ./scripts/keychain_init.sh

    - name: Install provisioning profile
      run: ./scripts/mobileprovision.sh
      env:
        IOS_PROVISIONING_PROFILE_BASE64: ${{ secrets.IOS_PROVISIONING_PROFILE_BASE64 }}
        CERT_SERIAL_NUMBER: ${{ env.CERT_SERIAL_NUMBER }}

    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v2

    - name: Clean build env (Xcode/CocoaPods)...
      run: |
        xcodebuild clean -workspace Runner.xcworkspace -scheme Runner
        rm -rf Podfile.lock ios/Pods
      working-directory: ./ios
    
    - name: Build iOS package
      run: flutter build ios --release --build-name $app_ver --build-number $app_rev --verbose

    - name: Upload to AppStoreConnect
      env:
        APP_ID: ${{ env.ios_app_id }}
        PROVISIONING_PROFILE_ID: ${{ env.ios_provising_profile_id }}
        IOS_APPSTORECONNECT_TEAMID: ${{ env.ios_team_id }}
        IOS_APPSTORECONNECT_USERID: ${{ secrets.IOS_APPSTORECONNECT_USERID }}
        IOS_APPSTORECONNECT_PASSWORD: ${{ secrets.IOS_APPSTORECONNECT_PASSWORD }}
      run: ../scripts/ios_archive.sh
      working-directory: ./ios
    
    # $REMOVE_TMP_KEYCHAIN is defined by keychain_init.sh
    - name: Cleanup temporary keychain
      run: $REMOVE_TMP_KEYCHAIN
      if: always()

    - name: Slack notification
      uses: 8398a7/action-slack@v3
      with:
        status: ${{ job.status }}
        author_name: GitHub/CameraTest iOS
        fields: repo,commit,message,author # default: repo,commit
        text: CameraTest iOS ${{ env.app_build_name }} build ${{ job.status }}.
        mention: here
        if_mention: always # success,failure,cancelled
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # optional
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }} # required
      if: always() # Pick up events even if the job fails or is canceled.
